{"version":3,"sources":["assets/logo-unform.svg","services/api.ts","components/Form/react-select/SelectInput/index.tsx","components/Form/react-select/AsyncSelectInput/index.tsx","components/Form/checkbox/styles.ts","components/Form/checkbox/index.tsx","components/Form/radio/styles.ts","components/Form/radio/index.tsx","components/Form/react-dropzone/styles.ts","components/Form/react-dropzone/index.tsx","components/Form/textarea/index.tsx","components/Form/react-phone-number-input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/ReactSelect/styles.ts","pages/ReactSelect/index.tsx","pages/Checkbox/styles.ts","pages/Checkbox/index.tsx","pages/Radio/styles.ts","pages/Radio/index.tsx","pages/ReactDropzone/styles.ts","pages/ReactDropzone/index.tsx","pages/TextArea/styles.ts","pages/TextArea/index.tsx","pages/ReactPhoneNumberInput/styles.ts","pages/ReactPhoneNumberInput/index.tsx","pages/_layouts/default/styles.ts","pages/_layouts/default/index.tsx","routes/Route.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","SelectInput","name","rest","selectRef","useRef","useField","fieldName","defaultValue","registerField","colourStyles","control","styles","borderRadius","borderColor","fontSize","height","option","styels","color","useEffect","ref","current","getValue","isMulti","state","value","map","setValue","clearValue","classNamePrefix","theme","colors","primary","neutral0","primary25","primary50","neutral80","neutral30","maxMenuHeight","AsyncSelect","marginTop","select","cacheOptions","Label","styled","label","CheckboxInput","options","inputRefs","refs","filter","checked","forEach","values","includes","id","htmlFor","key","defaultChecked","push","type","RadioInput","find","inputRef","Container","div","ReactDropzoneInput","useState","acceptedFiles","setAcceptedFiles","useDropzone","accept","onDrop","onDropAcceptedFiles","getRootProps","getInputProps","isDragActive","onClick","click","length","file","size","TextAreaInput","path","PhoneNumberInput","phoneValue","onChange","ButtonContainer","button","Button","children","UnForm","Form","ReactSelect","formRef","searchOption","setSearchOption","loading","setLoading","page","setPage","repositorySelected","setRepositorySelected","reposOptions","setReposOptions","toggleOption","useCallback","clearField","loadOptions","inputValue","callback","repo","handleRepositoryChange","data","handleLoadPage","a","get","params","response","full_name","Error","window","alert","message","handleSubmit","open","loadRepos","onSubmit","AsyncSelectInput","isLoading","defaultOptions","onMenuScrollToBottom","CheckboxForm","profiles","reset","profile","initialData","style","width","Radio","radioOptions","radio","user","ReactDropzone","images","urls","image","URL","createObjectURL","TextArea","text","placeholder","ReactPhoneNumberInput","phone","Wrapper","Unform","DefaultLayout","history","useHistory","location","useLocation","inputOptions","defaultInput","pathname","replace","handleInputOptions","input","src","unformLogo","alt","Route","Component","component","Layout","render","Routes","exact","Checkbox","createGlobalStyle","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f52603f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-unform.5ab9ac7c.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import React, { useRef, useEffect } from 'react';\nimport ReactSelect, {\n  OptionTypeBase,\n  Props as SelectProps,\n  StylesConfig,\n  Theme,\n} from 'react-select';\nimport { useField } from '@unform/core';\n\ninterface Props extends SelectProps<OptionTypeBase> {\n  name: string;\n}\n\nconst SelectInput: React.FC<Props> = ({ name, ...rest }) => {\n  const selectRef = useRef(null);\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const colourStyles: StylesConfig = {\n    control: styles => ({\n      ...styles,\n      borderRadius: 10,\n      borderColor: '#232129',\n      fontSize: 18,\n      height: 46,\n    }),\n    option: styels => ({\n      ...styels,\n      color: '#F4EDE8',\n    }),\n  };\n\n  const themeProps = (theme: Theme): Theme => {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: '#666360',\n        neutral0: '#232129',\n        primary25: '#666360',\n        primary50: '#999591',\n        neutral80: '#F4EDE8',\n        neutral30: '#FBC131',\n      },\n    };\n  };\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      getValue: (ref: any) => {\n        if (rest.isMulti) {\n          if (!ref.state.value) {\n            return [];\n          }\n          return ref.state.value.map((option: OptionTypeBase) => option.value);\n        }\n        if (!ref.state.value) {\n          return '';\n        }\n        return ref.state.value.value;\n      },\n      setValue: (ref: any, value: any) => {\n        ref.state.value = value;\n      },\n      clearValue: (ref: any) => {\n        ref.state.value = null;\n      },\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n\n  return (\n    <ReactSelect\n      defaultValue={defaultValue}\n      ref={selectRef}\n      classNamePrefix=\"react-select\"\n      styles={colourStyles}\n      theme={themeProps}\n      maxMenuHeight={250}\n      {...rest}\n    />\n  );\n};\n\nexport default SelectInput;\n","import React, { useRef, useEffect } from 'react';\nimport { OptionTypeBase, StylesConfig, Theme } from 'react-select';\nimport Select, { Props as AsyncProps } from 'react-select/async';\nimport { useField } from '@unform/core';\n\ninterface Props extends AsyncProps<OptionTypeBase> {\n  name: string;\n}\n\nconst AsyncSelect: React.FC<Props> = ({ name, ...rest }) => {\n  const selectRef = useRef(null);\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const colourStyles: StylesConfig = {\n    control: styles => ({\n      ...styles,\n      marginTop: 8,\n      borderRadius: 10,\n      borderColor: '#232129',\n      fontSize: 18,\n      height: 46,\n    }),\n    option: styels => ({\n      ...styels,\n      color: '#F4EDE8',\n    }),\n  };\n\n  const themeProps = (theme: Theme): Theme => {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: '#666360',\n        primary25: '#666360',\n        primary50: '#999591',\n        neutral0: '#232129',\n        neutral80: '#F4EDE8',\n        neutral30: '#FBC131',\n      },\n    };\n  };\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      getValue: (ref: any) => {\n        if (rest.isMulti) {\n          if (!ref.select.state.value) {\n            return [];\n          }\n\n          return ref.select.state.value.map(\n            (option: OptionTypeBase) => option.value,\n          );\n        }\n        if (!ref.select.state.value) {\n          return '';\n        }\n\n        return ref.select.state.value.value;\n      },\n      setValue: (ref: any, value: any) => {\n        ref.select.state.value = value;\n      },\n      clearValue: (ref: any) => {\n        ref.select.state.value = null;\n      },\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n\n  return (\n    <Select\n      cacheOptions\n      defaultValue={defaultValue}\n      ref={selectRef}\n      classNamePrefix=\"react-select\"\n      theme={themeProps}\n      maxMenuHeight={250}\n      styles={colourStyles}\n      {...rest}\n    />\n  );\n};\n\nexport default AsyncSelect;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 18px;\n  color: #f4ede8;\n\n  input {\n    margin-right: 8px;\n  }\n`;\n","import React, { useEffect, useRef, InputHTMLAttributes } from 'react';\nimport { useField } from '@unform/core';\n\nimport { Label } from './styles';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  options: {\n    id: string;\n    value: string;\n    label: string;\n  }[];\n}\n\nconst CheckboxInput: React.FC<Props> = ({ name, options, ...rest }) => {\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  const { fieldName, registerField, defaultValue = [] } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRefs.current,\n      getValue: (refs: HTMLInputElement[]) => {\n        return refs.filter(ref => ref.checked).map(ref => ref.value);\n      },\n      clearValue: (refs: HTMLInputElement[]) => {\n        refs.forEach(ref => {\n          ref.checked = false;\n        });\n      },\n      setValue: (refs: HTMLInputElement[], values: string[]) => {\n        refs.forEach(ref => {\n          if (values.includes(ref.id)) {\n            ref.checked = true;\n          }\n        });\n      },\n    });\n  }, [defaultValue, fieldName, registerField]);\n\n  return (\n    <>\n      {options.map(option => (\n        <Label htmlFor={option.id} key={option.id}>\n          <input\n            defaultChecked={defaultValue.includes(option.id)}\n            ref={ref => inputRefs.current.push(ref as HTMLInputElement)}\n            value={option.value}\n            type=\"checkbox\"\n            id={option.id}\n            {...rest}\n          />\n          {option.label}\n        </Label>\n      ))}\n    </>\n  );\n};\n\nexport default CheckboxInput;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 18px;\n  color: #f4ede8;\n\n  input {\n    margin-right: 8px;\n  }\n`;\n","import React, { useEffect, useRef, InputHTMLAttributes } from 'react';\nimport { useField } from '@unform/core';\n\nimport { Label } from './styles';\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  options: {\n    id: string;\n    value: string;\n    label: string;\n  }[];\n}\n\nconst RadioInput: React.FC<Props> = ({ name, options, ...rest }) => {\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  const { fieldName, registerField, defaultValue = '' } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRefs.current,\n      getValue: (refs: HTMLInputElement[]) => {\n        return refs.find(ref => ref.checked)?.value || '';\n      },\n      setValue: (refs: HTMLInputElement[], id: string) => {\n        const inputRef = refs.find(ref => ref.id === id);\n        if (inputRef) inputRef.checked = true;\n      },\n      clearValue: (refs: HTMLInputElement[]) => {\n        const inputRef = refs.find(ref => ref.checked === true);\n        if (inputRef) inputRef.checked = false;\n      },\n    });\n  }, [defaultValue, fieldName, registerField]);\n\n  return (\n    <>\n      {options.map(option => (\n        <Label htmlFor={option.id} key={option.id}>\n          <input\n            ref={ref => inputRefs.current.push(ref as HTMLInputElement)}\n            id={option.id}\n            type=\"radio\"\n            name={name}\n            defaultChecked={defaultValue.includes(option.id)}\n            value={option.value}\n            {...rest}\n          />\n          {option.label}\n        </Label>\n      ))}\n    </>\n  );\n};\n\nexport default RadioInput;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: #232129;\n  color: #fff;\n  padding: 24px 16px;\n  border-radius: 10px;\n\n  cursor: pointer;\n\n  ul {\n    li {\n      margin-left: 8px;\n    }\n    margin-bottom: 16px;\n  }\n\n  p {\n    font-weight: 500;\n    font-size: 16px;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useField } from '@unform/core';\n\nimport { Container } from './styles';\n\ninterface Props {\n  name: string;\n}\n\ninterface InputRefProps extends HTMLInputElement {\n  acceptedFiles: File[];\n}\n\nconst ReactDropzoneInput: React.FC<Props> = ({ name }) => {\n  const inputRef = useRef<InputRefProps>(null);\n  const { fieldName, registerField, defaultValue = [] } = useField(name);\n\n  const [acceptedFiles, setAcceptedFiles] = useState<File[]>(defaultValue);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: 'image/*',\n    onDrop: onDropAcceptedFiles => {\n      if (inputRef.current) {\n        inputRef.current.acceptedFiles = onDropAcceptedFiles;\n        setAcceptedFiles(onDropAcceptedFiles);\n      }\n    },\n  });\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      getValue: (ref: InputRefProps) => {\n        return ref.acceptedFiles || [];\n      },\n      clearValue: (ref: InputRefProps) => {\n        ref.acceptedFiles = [];\n        setAcceptedFiles([]);\n      },\n      setValue: (ref: InputRefProps, value) => {\n        ref.acceptedFiles = value;\n        setAcceptedFiles(value);\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container {...getRootProps()} onClick={() => inputRef.current?.click()}>\n      <input {...getInputProps()} accept=\"image/*\" ref={inputRef} />\n      {acceptedFiles.length !== 0 && (\n        <ul>\n          {acceptedFiles.map(file => (\n            <li key={file.name}>{`${file.name} - ${file.size} bytes`}</li>\n          ))}\n        </ul>\n      )}\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <p>Drag drop some files here, or click to select files</p>\n      )}\n    </Container>\n  );\n};\n\nexport default ReactDropzoneInput;\n","import React, { useRef, useEffect, InputHTMLAttributes } from 'react';\nimport { useField } from '@unform/core';\n\ninterface Props extends InputHTMLAttributes<HTMLTextAreaElement> {\n  name: string;\n}\n\nconst TextAreaInput: React.FC<Props> = ({ name, ...rest }) => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const { fieldName, registerField, defaultValue = '' } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [registerField, fieldName]);\n\n  return <textarea ref={inputRef} defaultValue={defaultValue} {...rest} />;\n};\n\nexport default TextAreaInput;\n","import React, { useRef, useEffect } from 'react';\nimport { useField } from '@unform/core';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput, { PhoneInputProps } from 'react-phone-number-input';\n\ninterface Props extends Omit<PhoneInputProps, 'value' | 'onChange'> {\n  name: string;\n}\n\ninterface InputRefProps extends PhoneInput {\n  phoneValue: string;\n}\n\nconst PhoneNumberInput: React.FC<Props> = ({ name, ...rest }) => {\n  const inputRef = useRef<InputRefProps>(null);\n\n  const { fieldName, defaultValue = '', registerField } = useField(name);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.phoneValue = defaultValue;\n    }\n  }, [defaultValue]);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      getValue: ref => {\n        return ref.phoneValue || '';\n      },\n      setValue: (ref, value: string) => {\n        ref.phoneValue = value;\n      },\n      clearValue: ref => {\n        ref.phoneValue = '';\n        ref.value = '';\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <PhoneInput\n      ref={inputRef}\n      value={defaultValue}\n      onChange={value => {\n        if (inputRef.current) inputRef.current.phoneValue = value;\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default PhoneNumberInput;\n","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.button`\n  height: 40px;\n  width: 100%;\n  background: #fbc131;\n  padding: 0px 16px;\n  border-radius: 10px;\n  border: none;\n  font-size: 18px;\n  font-weight: 500;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  cursor: pointer;\n\n  transition: background 0.3s;\n\n  :hover {\n    background: #cc9d29;\n  }\n`;\n","import React, { ButtonHTMLAttributes } from 'react';\n\nimport { ButtonContainer } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => {\n  return <ButtonContainer {...rest}>{children}</ButtonContainer>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  button {\n    margin-top: 16px;\n  }\n`;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { FormHandles } from '@unform/core';\n\nimport api from '../../services/api';\n\nimport { SelectInput, AsyncSelectInput } from '../../components/Form';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface ReposOptions {\n  value: string;\n  label: string;\n}\n\ninterface Repo {\n  name: string;\n  full_name: string;\n}\n\ninterface LoadOptionsCallback {\n  (repos: ReposOptions[]): void;\n}\n\ninterface SelectFormData {\n  name: string;\n  repo: string;\n}\n\nconst ReactSelect: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const [searchOption, setSearchOption] = useState('repos');\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [repositorySelected, setRepositorySelected] = useState<string>('');\n  const [reposOptions, setReposOptions] = useState<ReposOptions[]>([]);\n\n  const optionsSelect = [\n    { value: 'repos', label: 'Owner' },\n    { value: 'starred', label: 'Starred' },\n  ];\n\n  const toggleOption = useCallback(() => {\n    setLoading(true);\n    setSearchOption(state => (state === 'repos' ? 'starred' : 'repos'));\n    setRepositorySelected('');\n    formRef.current?.clearField('repo');\n  }, []);\n\n  const loadOptions = useCallback(\n    (inputValue: string, callback: LoadOptionsCallback) => {\n      const data = reposOptions.filter(repo => repo.label.includes(inputValue));\n\n      callback(data);\n    },\n    [reposOptions],\n  );\n\n  const handleRepositoryChange = useCallback(data => {\n    setRepositorySelected(data.value);\n  }, []);\n\n  const handleLoadPage = useCallback(async () => {\n    try {\n      const response = await api.get<Repo[]>(\n        `/users/EliasGcf/${searchOption}`,\n        {\n          params: {\n            page: page + 1,\n          },\n        },\n      );\n\n      if (response.data.length !== 0) {\n        const data = response.data.map(repo => ({\n          label: repo.name,\n          value: repo.full_name,\n        }));\n\n        setReposOptions(state => [...state, ...data]);\n        setPage(page + 1);\n      } else {\n        throw new Error('No more repos to loading');\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n  }, [searchOption, page]);\n\n  const handleSubmit = useCallback((data: SelectFormData) => {\n    if (data.repo) {\n      window.open(`https://github.com/${data.repo}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    async function loadRepos() {\n      const response = await api.get<Repo[]>(`/users/EliasGcf/${searchOption}`);\n\n      const data = response.data.map(repo => ({\n        label: repo.name,\n        value: repo.full_name,\n      }));\n\n      setReposOptions(data);\n      setLoading(false);\n    }\n\n    loadRepos();\n  }, [searchOption]);\n\n  return (\n    <UnForm ref={formRef} onSubmit={handleSubmit}>\n      <SelectInput\n        name=\"name\"\n        defaultValue={{ value: 'repos', label: 'Owner' }}\n        onChange={toggleOption}\n        options={optionsSelect}\n      />\n      <AsyncSelectInput\n        name=\"repo\"\n        isLoading={loading}\n        defaultOptions={reposOptions}\n        loadOptions={loadOptions}\n        onChange={handleRepositoryChange}\n        onMenuScrollToBottom={handleLoadPage}\n      />\n\n      <Button type=\"submit\">{`Open ${repositorySelected}`}</Button>\n    </UnForm>\n  );\n};\n\nexport default ReactSelect;\n","import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React, { useRef } from 'react';\nimport { FormHandles } from '@unform/core';\n\nimport { CheckboxInput } from '../../components/Form';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface CheckboxOption {\n  id: string;\n  value: string;\n  label: string;\n}\n\ninterface FormData {\n  profiles: string[];\n}\n\nconst CheckboxForm: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const checkboxOptions: CheckboxOption[] = [\n    { id: 'rocketseat', value: 'rocketseat', label: 'Rocketseat' },\n    { id: 'eliasgcf', value: 'eliasgcf', label: 'EliasGcf' },\n  ];\n\n  function handleSubmit(data: FormData) {\n    if (data.profiles.length === 0) {\n      return;\n    }\n    formRef.current?.reset();\n\n    data.profiles.forEach(profile => {\n      window.open(`https://github.com/${profile}`);\n    });\n  }\n\n  return (\n    <UnForm\n      ref={formRef}\n      onSubmit={handleSubmit}\n      initialData={{ profiles: ['rocketseat'] }}\n    >\n      <CheckboxInput name=\"profiles\" options={checkboxOptions} />\n\n      <Button style={{ width: 100 }} type=\"submit\">\n        Open\n      </Button>\n    </UnForm>\n  );\n};\n\nexport default CheckboxForm;\n","import { Form } from '@unform/web';\nimport styled from 'styled-components';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React, { useRef } from 'react';\nimport { FormHandles, FormHelpers } from '@unform/core';\n\nimport { RadioInput } from '../../components/Form';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface RadioOption {\n  id: string;\n  value: string;\n  label: string;\n}\n\ninterface FormData {\n  user: string;\n}\n\nconst Radio: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const radioOptions: RadioOption[] = [\n    { id: 'rocketseat', value: 'rocketseat', label: 'Rocketseat' },\n    { id: 'eliasgcf', value: 'eliasgcf', label: 'EliasGcf' },\n  ];\n\n  function handleSubmit(data: FormData, { reset }: FormHelpers) {\n    if (!data.user) return;\n\n    window.open(`https://github.com/${data.user}`);\n    reset();\n  }\n\n  return (\n    <UnForm\n      ref={formRef}\n      initialData={{ radio: radioOptions[1].id }}\n      onSubmit={handleSubmit}\n    >\n      <RadioInput name=\"user\" options={radioOptions} />\n\n      <Button style={{ width: 100 }} type=\"submit\">\n        Open\n      </Button>\n    </UnForm>\n  );\n};\n\nexport default Radio;\n","import { Form } from '@unform/web';\nimport styled from 'styled-components';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  button {\n    margin-top: 16px;\n  }\n`;\n","import React, { useRef } from 'react';\nimport { FormHandles } from '@unform/core';\n\nimport ReactDropzoneInput from '../../components/Form/react-dropzone';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface FormData {\n  images: File[];\n}\n\nconst ReactDropzone: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  function handleSubmit(data: FormData) {\n    if (data.images.length === 0) return;\n\n    const urls = data.images.map(image => URL.createObjectURL(image));\n\n    // urls.forEach(url => {\n    //   window.open(url);\n    // });\n    formRef.current?.reset();\n    alert(urls);\n  }\n\n  return (\n    <UnForm ref={formRef} onSubmit={handleSubmit}>\n      <ReactDropzoneInput name=\"images\" />\n\n      <Button>Open</Button>\n    </UnForm>\n  );\n};\n\nexport default ReactDropzone;\n","import { Form } from '@unform/web';\nimport styled from 'styled-components';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  display: flex;\n  flex-direction: column;\n\n  textarea {\n    width: 100%;\n    height: 150px;\n\n    max-height: 300px;\n    min-height: 56px;\n\n    margin-bottom: 16px;\n    border-radius: 10px;\n\n    padding: 8px;\n\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    resize: vertical;\n  }\n`;\n","import React, { useRef } from 'react';\nimport { FormHandles } from '@unform/core';\n\nimport { TextAreaInput } from '../../components/Form';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface FormData {\n  text: string;\n}\n\nconst TextArea: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  function handleSubmit(data: FormData) {\n    alert(data.text);\n  }\n\n  return (\n    <UnForm ref={formRef} onSubmit={handleSubmit}>\n      <TextAreaInput name=\"text\" placeholder=\"Digite aqui ...\" />\n      <Button style={{ width: '100%' }} type=\"submit\">\n        Send\n      </Button>\n    </UnForm>\n  );\n};\n\nexport default TextArea;\n","import { Form } from '@unform/web';\nimport styled from 'styled-components';\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  input {\n    padding: 8px 0 8px 8px;\n    border-radius: 10px;\n    border: none;\n\n    margin-left: 8px;\n  }\n\n  .PhoneInputCountryIconImg,\n  .PhoneInputCountrySelectArrow {\n    color: #fbc131;\n  }\n`;\n","import React, { useCallback } from 'react';\nimport { FormHelpers } from '@unform/core';\n\nimport { PhoneNumberInput } from '../../components/Form';\nimport Button from '../../components/Button';\n\nimport { UnForm } from './styles';\n\ninterface FormProps {\n  phone: string;\n}\n\nconst ReactPhoneNumberInput: React.FC = () => {\n  const handleSubmit = useCallback(\n    (data: FormProps, { reset }: FormHelpers) => {\n      reset();\n      window.alert(data.phone);\n    },\n    [],\n  );\n\n  return (\n    <UnForm onSubmit={handleSubmit}>\n      <PhoneNumberInput name=\"phone\" placeholder=\"+55 81 99145 0029\" />\n\n      <Button style={{ marginTop: 16 }} type=\"submit\">\n        Send\n      </Button>\n    </UnForm>\n  );\n};\n\nexport default ReactPhoneNumberInput;\n","import styled from 'styled-components';\nimport { Form as Unform } from '@unform/web';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  > h1 {\n    font-size: 24px;\n    color: #fff;\n    margin-bottom: 16px;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  img {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 450px;\n  width: 100%;\n`;\n\nexport const Form = styled(Unform)`\n  max-width: 450px;\n  width: 100%;\n\n  margin-bottom: 40px;\n\n  button {\n    margin-top: 16px;\n  }\n`;\n","import React, { useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport unformLogo from '../../../assets/logo-unform.svg';\n\nimport Button from '../../../components/Button';\nimport { SelectInput } from '../../../components/Form';\n\nimport { Container, Wrapper, Form } from './styles';\n\ninterface InputOptionsData {\n  value: string;\n  label: string;\n}\n\ninterface FormData {\n  input: string;\n}\n\nconst DefaultLayout: React.FC = ({ children }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const inputOptions: InputOptionsData[] = [\n    { value: 'react-select', label: 'React Select' },\n    { value: 'checkbox', label: 'Checkbox' },\n    { value: 'radio', label: 'Radio' },\n    { value: 'react-dropzone', label: 'React Dropzone' },\n    { value: 'textarea', label: 'TextArea' },\n    { value: 'react-phone-number-input', label: 'React Phone Number' },\n  ];\n\n  const defaultInput = inputOptions.find(\n    option => option.value === location.pathname.replace('/', ''),\n  );\n\n  const handleInputOptions = useCallback(\n    value => {\n      history.push(`/${value.value}`);\n    },\n    [history],\n  );\n\n  const handleSubmit = useCallback(({ input }: FormData) => {\n    if (!input) return;\n\n    window.open(\n      `https://github.com/EliasGcf/unform-examples/tree/master/src/components/Form/${input}`,\n    );\n  }, []);\n\n  return (\n    <Container>\n      <img src={unformLogo} alt=\"Logo unForm\" />\n\n      <h1>Inputs examples with Unform</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <SelectInput\n          onChange={handleInputOptions}\n          options={inputOptions}\n          defaultValue={defaultInput}\n          name=\"input\"\n        />\n\n        <Button type=\"submit\">Open code on GitHub</Button>\n      </Form>\n\n      <Wrapper>{children}</Wrapper>\n    </Container>\n  );\n};\n\nexport default DefaultLayout;\n","import React from 'react';\nimport {\n  RouteProps as ReactDOMRouteProps,\n  Route as ReactDOMRoute,\n} from 'react-router-dom';\n\nimport DefaultLayout from '../pages/_layouts/default';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({ component: Component, ...rest }) => {\n  const Layout = DefaultLayout;\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={() => {\n        return (\n          <Layout>\n            <Component />\n          </Layout>\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport ReactSelect from '../pages/ReactSelect';\nimport Checkbox from '../pages/Checkbox';\nimport Radio from '../pages/Radio';\nimport ReactDropzone from '../pages/ReactDropzone';\nimport TextArea from '../pages/TextArea';\nimport ReactPhoneNumberInput from '../pages/ReactPhoneNumberInput';\n\nimport Route from './Route';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={() => null} />\n    <Route path=\"/react-select\" component={ReactSelect} />\n    <Route path=\"/checkbox\" component={Checkbox} />\n    <Route path=\"/radio\" component={Radio} />\n    <Route path=\"/react-dropzone\" component={ReactDropzone} />\n    <Route path=\"/textarea\" component={TextArea} />\n    <Route path=\"/react-phone-number-input\" component={ReactPhoneNumberInput} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #6633cc;\n    color: #000;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <Routes />\n    </HashRouter>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}