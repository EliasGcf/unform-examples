{"version":3,"sources":["pages/Form/styles.ts","components/SelectInput/index.tsx","components/AsyncSelectInput/index.tsx","services/api.ts","pages/Form/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Content","UnForm","Form","SelectInput","name","rest","selectRef","useRef","useField","fieldName","defaultValue","registerField","colourStyles","control","styles","borderRadius","borderColor","fontSize","height","option","styels","color","useEffect","ref","current","path","undefined","getValue","isMulti","state","value","map","classNamePrefix","theme","colors","primary","neutral0","primary25","primary50","neutral80","neutral30","maxMenuHeight","AsyncSelect","marginTop","select","clearValue","cacheOptions","api","axios","create","baseURL","formRef","useState","searchOption","setSearchOption","loading","setLoading","page","setPage","reposOptions","setReposOptions","toggleOption","useCallback","clearField","loadOptions","inputValue","callback","filter","repo","label","includes","handleLoadPage","a","get","params","response","data","length","full_name","Error","window","alert","message","handleSubmit","open","loadRepos","onSubmit","onChange","options","isLoading","defaultOptions","onMenuScrollToBottom","type","Routes","exact","component","createGlobalStyle","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.484b23c5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Form } from '@unform/web';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  h1 {\n    font-size: 24px;\n    color: #fff;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const UnForm = styled(Form)`\n  padding: 24px;\n  border-radius: 10px;\n  background: #3e3b47;\n\n  button {\n    height: 40px;\n    width: 100%;\n    background: #fbc131;\n    padding: 0 16px;\n    border-radius: 10px;\n    border: none;\n    font-size: 18px;\n    font-weight: 500;\n    margin-top: 16px;\n  }\n`;\n","import React, { useRef, useEffect } from 'react';\nimport ReactSelect, {\n  OptionTypeBase,\n  Props as SelectProps,\n  StylesConfig,\n  Theme,\n} from 'react-select';\nimport { useField } from '@unform/core';\n\ninterface Props extends SelectProps<OptionTypeBase> {\n  name: string;\n}\n\nconst SelectInput: React.FC<Props> = ({ name, ...rest }) => {\n  const selectRef = useRef(null);\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const colourStyles: StylesConfig = {\n    control: styles => ({\n      ...styles,\n      borderRadius: 10,\n      borderColor: '#232129',\n      fontSize: 18,\n      height: 46,\n    }),\n    option: styels => ({\n      ...styels,\n      color: '#F4EDE8',\n    }),\n  };\n\n  const themeProps = (theme: Theme): Theme => {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: '#666360',\n        neutral0: '#232129',\n        primary25: '#666360',\n        primary50: '#999591',\n        neutral80: '#F4EDE8',\n        neutral30: '#FBC131',\n      },\n    };\n  };\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      path: undefined,\n      getValue: (ref: any) => {\n        if (rest.isMulti) {\n          if (!ref.state.value) {\n            return [];\n          }\n\n          return ref.state.value.map((option: OptionTypeBase) => option.value);\n        }\n\n        if (!ref.state.value) {\n          return '';\n        }\n        return ref.state.value.value;\n      },\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n\n  return (\n    <ReactSelect\n      defaultValue={defaultValue}\n      ref={selectRef}\n      classNamePrefix=\"react-select\"\n      styles={colourStyles}\n      theme={themeProps}\n      maxMenuHeight={250}\n      {...rest}\n    />\n  );\n};\n\nexport default SelectInput;\n","import React, { useRef, useEffect } from 'react';\nimport { OptionTypeBase, StylesConfig, Theme } from 'react-select';\nimport Select, { Props as AsyncProps } from 'react-select/async';\nimport { useField } from '@unform/core';\n\ninterface Props extends AsyncProps<OptionTypeBase> {\n  name: string;\n}\n\nconst AsyncSelect: React.FC<Props> = ({ name, ...rest }) => {\n  const selectRef = useRef(null);\n  const { fieldName, defaultValue, registerField } = useField(name);\n\n  const colourStyles: StylesConfig = {\n    control: styles => ({\n      ...styles,\n      marginTop: 8,\n      borderRadius: 10,\n      borderColor: '#232129',\n      fontSize: 18,\n      height: 46,\n    }),\n    option: styels => ({\n      ...styels,\n      color: '#F4EDE8',\n    }),\n  };\n\n  const themeProps = (theme: Theme): Theme => {\n    return {\n      ...theme,\n      colors: {\n        ...theme.colors,\n        primary: '#666360',\n        primary25: '#666360',\n        primary50: '#999591',\n        neutral0: '#232129',\n        neutral80: '#F4EDE8',\n        neutral30: '#FBC131',\n      },\n    };\n  };\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      getValue: (ref: any) => {\n        if (rest.isMulti) {\n          if (!ref.select.state.value) {\n            return [];\n          }\n\n          return ref.select.state.value.map(\n            (option: OptionTypeBase) => option.value,\n          );\n        }\n        if (!ref.select.state.value) {\n          return '';\n        }\n\n        return ref.select.state.value.value;\n      },\n      clearValue: (ref: any) => {\n        ref.select.state.value = '';\n      },\n    });\n  }, [fieldName, registerField, rest.isMulti]);\n\n  return (\n    <Select\n      cacheOptions\n      defaultValue={defaultValue}\n      ref={selectRef}\n      classNamePrefix=\"react-select\"\n      theme={themeProps}\n      styles={colourStyles}\n      {...rest}\n    />\n  );\n};\n\nexport default AsyncSelect;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n\nimport { FormHandles } from '@unform/core';\nimport { Container, Content, UnForm } from './styles';\nimport SelectInput from '../../components/SelectInput';\nimport AsyncSelect from '../../components/AsyncSelectInput';\nimport api from '../../services/api';\n\ninterface ReposOptions {\n  value: string;\n  label: string;\n}\n\ninterface Repo {\n  name: string;\n  full_name: string;\n}\n\ninterface LoadOptionsCallback {\n  (repos: ReposOptions[]): void;\n}\n\ninterface SelectFormData {\n  name: string;\n  repo: string;\n}\n\nconst Form: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const [searchOption, setSearchOption] = useState('repos');\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [reposOptions, setReposOptions] = useState<ReposOptions[]>([]);\n\n  const optionsSelect = [\n    { value: 'repos', label: 'Owner' },\n    { value: 'starred', label: 'Starred' },\n  ];\n\n  const toggleOption = useCallback(() => {\n    setLoading(true);\n    setSearchOption(state => (state === 'repos' ? 'starred' : 'repos'));\n    formRef.current?.clearField('repo');\n  }, []);\n\n  const loadOptions = useCallback(\n    (inputValue: string, callback: LoadOptionsCallback) => {\n      const data = reposOptions.filter(repo => repo.label.includes(inputValue));\n\n      callback(data);\n    },\n    [reposOptions],\n  );\n\n  const handleLoadPage = useCallback(async () => {\n    try {\n      const response = await api.get<Repo[]>(\n        `/users/EliasGcf/${searchOption}`,\n        {\n          params: {\n            page: page + 1,\n          },\n        },\n      );\n\n      if (response.data.length !== 0) {\n        const data = response.data.map(repo => ({\n          label: repo.name,\n          value: repo.full_name,\n        }));\n\n        setReposOptions(state => [...state, ...data]);\n        setPage(page + 1);\n      } else {\n        throw new Error('No more repos to loading');\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n  }, [searchOption, page]);\n\n  const handleSubmit = useCallback((data: SelectFormData) => {\n    if (data.repo) {\n      window.open(`https://github.com/${data.repo}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    async function loadRepos() {\n      const response = await api.get<Repo[]>(`/users/EliasGcf/${searchOption}`);\n\n      const data = response.data.map(repo => ({\n        label: repo.name,\n        value: repo.full_name,\n      }));\n\n      setReposOptions(data);\n      setLoading(false);\n    }\n\n    loadRepos();\n  }, [searchOption]);\n\n  return (\n    <Container>\n      <Content>\n        <h1>Select Inputs examples with Unform</h1>\n\n        <UnForm ref={formRef} onSubmit={handleSubmit}>\n          <SelectInput\n            name=\"name\"\n            defaultValue={{ value: 'repos', label: 'Owner' }}\n            onChange={toggleOption}\n            options={optionsSelect}\n          />\n          <AsyncSelect\n            name=\"repo\"\n            isLoading={loading}\n            defaultOptions={reposOptions}\n            loadOptions={loadOptions}\n            onMenuScrollToBottom={handleLoadPage}\n          />\n\n          <button type=\"submit\">Open</button>\n        </UnForm>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Form from '../pages/Form';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Form} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #7159c1;\n    color: #000;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <Routes />\n    </BrowserRouter>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}